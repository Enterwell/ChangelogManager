{
    "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "id": "fd8800ae-13a1-4faf-a126-185bd26705d4",
    "name": "MergeChangelog",
    "friendlyName": "Merge Changelog",
    "description": "Compiles the changes into Changelog.md if one exists.",
    "category": "Utility",
    "author": "Enterwell",
    "version": {
        "Major": 2,
        "Minor": 2,
        "Patch": 1
    },
    "instanceNameFormat": "Merging Changelog",
    "inputs": [
        {
            "name": "changelogLocation",
            "type": "filePath",
            "label": "Changelog Location",
            "defaultValue": "$(Build.SourcesDirectory)",
            "helpMarkDown": "Location of the directory that contains Changelog.md."
        },
        {
            "name": "changesInDifferentLocation",
            "type": "boolean",
            "label": "Different location of the 'changes' directory",
            "defaultValue": false,
            "helpMarkDown": "Mark this as true if the 'changes' directory exists somewhere else than on the changelog location."
        },
        {
            "name": "changesLocation",
            "type": "filePath",
            "label": "Changes Location",
            "required": true,
            "helpMarkDown": "Location of the 'changes' directory.",
            "visibleRule": "changesInDifferentLocation = true"
        },
        {
            "name": "setVersionFlag",
            "type": "boolean",
            "label": "Set Version",
            "defaultValue": false,
            "helpMarkDown": "Should the new version be set in the appropriate project file ('package.json' or '*.csproj')."
        },
        {
            "name": "pathToProjectFile",
            "type": "string",
            "label": "Path to the project file",
            "defaultValue": "",
            "helpMarkDown": "If not set, the application will try to automatically determine the project file. Currently supported project types: NPM (package.json) and .NET SDK (*.csproj with the version tag).",
            "visibleRule": "setVersionFlag = true"
        }
    ],
    "execution": {
        "Node10": {
            "target": "index.js"
        },
        "Node20_1": {
            "target": "index.js"
        }
    },
    "outputVariables": [
        {
            "description": "Newly bumped semantic version based on the changes made.",
            "name": "bumpedSemanticVersion"
        }
    ]
}